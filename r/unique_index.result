创建组合unique index时，测试不同的列顺序定义
drop table if exists t_col_order;
CREATE TABLE t_col_order (c1 INT, c2 INT, c3 INT);
CREATE UNIQUE INDEX uidx_order1 ON t_col_order(c1, c2);
CREATE UNIQUE INDEX uidx_order2 ON t_col_order(c2, c1);
预期：索引均按指定顺序创建，唯一性约束基于列的组合和其在索引定义中的顺序。例如，对于uidx_order1，(1, 2) 和 (2, 1) 是不同的；对于uidx_order2，它们也是不同的，但索引结构不同
insert into t_col_order values (1, 2, 3);
insert into t_col_order values (2, 1, 3);
show create table t_col_order;
Table	Create Table
t_col_order	CREATE TABLE `t_col_order`(
    `c1` INT,
    `c2` INT,
    `c3` INT,
    UNIQUE INDEX uidx_order1(`c1`,`c2`) replica=3,
    UNIQUE INDEX uidx_order2(`c2`,`c1`) replica=3
) engine=TXN_LSM  replica=3 AUTO_INCREMENT=10002
在空表或已有兼容数据的表上通过ALTER TABLE添加单列或组合unique index。
drop table if exists t_alter_ok;
CREATE TABLE t_alter_ok (id INT, val VARCHAR(10));
INSERT INTO t_alter_ok VALUES (1, 'x');
ALTER TABLE t_alter_ok ADD UNIQUE INDEX uidx_val_alter(val);
行为与CREATE UNIQUE INDEX类似，索引成功添加，唯一性约束生效。
insert into t_alter_ok values (2, 'x');
Error 1062 (23000): Duplicate entry 'x' for key 'uidx_val_alter.PRIMARY'
insert into t_alter_ok values (3, 'y');
show create table t_alter_ok;
Table	Create Table
t_alter_ok	CREATE TABLE `t_alter_ok`(
    `id` INT,
    `val` VARCHAR(10),
    UNIQUE INDEX uidx_val_alter(`val`) replica=3
) engine=TXN_LSM  replica=3 AUTO_INCREMENT=10002
删除已存在的单列或组合unique index
drop table if exists t_drop;
CREATE TABLE t_drop (id INT, val VARCHAR(10), UNIQUE INDEX uidx_val_drop(val), PRIMARY KEY (id));
alter table t_drop drop index uidx_val_drop;
show create table t_drop;
Table	Create Table
t_drop	CREATE TABLE `t_drop`(
    `id` INT NOT NULL,
    `val` VARCHAR(10),
    PRIMARY KEY (`id`)
) engine=TXN_LSM  replica=3
insert into t_drop values (1, 'x');
insert into t_drop values (2, 'x');
重命名unique index所包含的列。
drop table if exists t_change;
CREATE TABLE t_change (id INT,old_val VARCHAR(10),UNIQUE INDEX uidx_change(old_val),PRIMARY KEY (id));
ALTER TABLE t_change CHANGE COLUMN old_val new_val VARCHAR(10);
insert into t_change values (1,'x');
insert into t_change values (2,'x');
Error 1062 (23000): Duplicate entry '' for key 'uidx_change.PRIMARY'
show create table t_change;
Table	Create Table
t_change	CREATE TABLE `t_change`(
    `id` INT NOT NULL,
    `new_val` VARCHAR(10),
    PRIMARY KEY (`id`),
    UNIQUE INDEX uidx_change(`old_val`) replica=3
) engine=TXN_LSM  replica=3
drop table t_change;
删除unique index所包含的列。
drop table if exists t_drop_col1;
CREATE TABLE t_drop_col1 (c1 INT, c2 INT,UNIQUE INDEX uidx_drop_col1(c1),PRIMARY KEY (c2));
insert into t_drop_col1 values (1,1);
insert into t_drop_col1 values (2,2);
ALTER TABLE t_drop_col1 DROP COLUMN c1;
show create table t_drop_col1;
Table	Create Table
t_drop_col1	CREATE TABLE `t_drop_col1`(
    `c2` INT NOT NULL,
    PRIMARY KEY (`c2`)
) engine=TXN_LSM  replica=3
drop table t_drop_col1;
向带有单列unique index的表中插入唯一的非NULL值。
drop table if exists t_ins_ok;
CREATE TABLE t_ins_ok (id INT, email VARCHAR(50),UNIQUE INDEX uidx_ins_ok(email),PRIMARY KEY (id));
INSERT INTO t_ins_ok (id, email) VALUES (1, 'test1@example.com');
INSERT INTO t_ins_ok (id, email) VALUES (2, 'test1@example.com');
Error 1062 (23000): Duplicate entry 'test1@example.com' for key 'uidx_ins_ok.PRIMARY'
show create table t_ins_ok;
Table	Create Table
t_ins_ok	CREATE TABLE `t_ins_ok`(
    `id` INT NOT NULL,
    `email` VARCHAR(50),
    PRIMARY KEY (`id`),
    UNIQUE INDEX uidx_ins_ok(`email`) replica=3
) engine=TXN_LSM  replica=3
drop table t_ins_ok;
向带有组合unique index的表中插入唯一的非NULL值。
drop table if exists t_ins_comp_ok;
CREATE TABLE t_ins_comp_ok (uid INT, pid INT, UNIQUE INDEX uidx_uid_pid(uid, pid));
INSERT INTO t_ins_comp_ok (uid, pid) VALUES (100, 200);
INSERT INTO t_ins_comp_ok (uid, pid) VALUES (100, 200);
Error 1062 (23000): Duplicate entry '100-200' for key 't_ins_comp_ok.PRIMARY'
show create table t_ins_comp_ok;
Table	Create Table
t_ins_comp_ok	CREATE TABLE `t_ins_comp_ok`(
    `uid` INT NOT NULL,
    `pid` INT NOT NULL,
    PRIMARY KEY (`uid`,`pid`)
) engine=TXN_LSM  replica=3
drop table t_ins_comp_ok;
更新unique index列的值为一个新的、表中不存在的唯一值。
drop table if exists t_upd_ok;
CREATE TABLE t_upd_ok (id INT, email VARCHAR(50),UNIQUE INDEX uidx_upd_ok(email),PRIMARY KEY (id));
INSERT INTO t_upd_ok VALUES (1, 'old@example.com'), (2, 'keep@example.com');
UPDATE t_upd_ok SET email = 'new@example.com' WHERE id = 1;
show create table t_upd_ok;
Table	Create Table
t_upd_ok	CREATE TABLE `t_upd_ok`(
    `id` INT NOT NULL,
    `email` VARCHAR(50),
    PRIMARY KEY (`id`),
    UNIQUE INDEX uidx_upd_ok(`email`) replica=3
) engine=TXN_LSM  replica=3
drop table t_upd_ok;
更新非unique index列，不影响unique index的唯一性。
drop table if exists t_upd_nonkey;
CREATE TABLE t_upd_nonkey (id INT, email VARCHAR(50),counter INT,UNIQUE INDEX uidx_upd_nonkey(email));
INSERT INTO t_upd_nonkey VALUES (1, 'user@example.com', 0);
UPDATE t_upd_nonkey SET counter = counter + 1 WHERE email = 'user@example.com';
show create table t_upd_nonkey;
Table	Create Table
t_upd_nonkey	CREATE TABLE `t_upd_nonkey`(
    `id` INT,
    `email` VARCHAR(50) NOT NULL,
    `counter` INT,
    PRIMARY KEY (`email`)
) engine=TXN_LSM  replica=3
drop table t_upd_nonkey;
更新unique index列的值，使其与表中另一行已存在的非NULL值相同。
drop table if exists t_upd_ok;
CREATE TABLE t_upd_ok (id INT, email VARCHAR(50),UNIQUE INDEX uidx_upd_ok(email),PRIMARY KEY (id));
INSERT INTO t_upd_ok VALUES (1, 'val1@example.com'), (2, 'val2@example.com');
UPDATE t_upd_ok SET email = 'val2@example.com' WHERE id = 1;
Error 1062 (23000): Duplicate entry 'val2@example.com' for key 'uidx_upd_ok.PRIMARY'
show create table t_upd_ok;
Table	Create Table
t_upd_ok	CREATE TABLE `t_upd_ok`(
    `id` INT NOT NULL,
    `email` VARCHAR(50),
    PRIMARY KEY (`id`),
    UNIQUE INDEX uidx_upd_ok(`email`) replica=3
) engine=TXN_LSM  replica=3
drop table t_upd_ok;
删除包含unique index列的一行或多行。
drop table if exists t_del_ok;
CREATE TABLE t_del_ok (id INT, email VARCHAR(50),UNIQUE INDEX uidx_del_ok(email),PRIMARY KEY (id));
INSERT INTO t_del_ok VALUES (1, 'val1@example.com'), (2, 'val2@example.com');
DELETE FROM t_del_ok WHERE id = 1;
show create table t_del_ok;
Table	Create Table
t_del_ok	CREATE TABLE `t_del_ok`(
    `id` INT NOT NULL,
    `email` VARCHAR(50),
    PRIMARY KEY (`id`),
    UNIQUE INDEX uidx_del_ok(`email`) replica=3
) engine=TXN_LSM  replica=3
select * from t_del_ok;
id	email
2	val2@example.com
drop table t_del_ok;
并发测试
并发 insert 相同值
drop table if exists t_conc_insert;
CREATE TABLE t_conc_insert (id INT, code VARCHAR(10),UNIQUE INDEX uidx_conc_insert(code),PRIMARY KEY (id));
select * from t_conc_insert;
id	code
drop table t_conc_insert;
drop table if exists u2;
create table u2(id int not null auto_increment, name varchar(20), age int, write_time timestamp, unique index uk_name(name), primary key(id));
insert into u2(id,name,age,write_time) values (5,'bb',39,'2011-01-01 12:00:00') on duplicate key update age=10;
insert into u2(id,name,age,write_time) values (6,'bb',40,'2011-01-01 12:00:00') on duplicate key update age=10;
select * from u2;
id	name	age	write_time
5	bb	39	2011-01-01 12:00:00.0
6	bb	40	2011-01-01 12:00:00.0
drop table u2;
